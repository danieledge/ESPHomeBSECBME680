esphome:
  name: roomsensor1
  platform: ESP8266
  board: d1_mini
  

wifi:
  ssid: "SSID"
  password: "PASSWORD"
  use_address: IPADDRESS # roomsensor1
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Roomsensor1 Fallback Hotspot"
    password: "PASSWORD"

web_server:
  port: 80
  auth:
    username: admin
    password: PASSWORD

captive_portal:

# Enable logging
logger:

i2c: 
  scan: true

  
display:
  - platform: ssd1306_i2c
    model: "SH1106 128x64"
    lambda: |-
      // Print "Enviroment Monitor 1.0" in top center.
      it.printf(64, 0, id(font1), TextAlign::TOP_CENTER, "Environment Sensor 1");
      
      if (id(iaq_sensor).has_state()) {
        if (id(iaq_sensor).state <=50.5) {
          it.printf(10, 40, id(font2), TextAlign::CENTER_LEFT , "GOOD");
        }
        if (id(iaq_sensor).state >50.5 and id(iaq_sensor).state <=100.5) {
          it.printf(10, 40, id(font2), TextAlign::CENTER_LEFT, "MODERATE");
        }
        if (id(iaq_sensor).state >100.5 and id(iaq_sensor).state <=200.5) {
          it.printf(10, 40, id(font2), TextAlign::CENTER_LEFT, "UNHEALTHY");
        }
        
        if (id(iaq_sensor).state >200.5 and id(iaq_sensor).state <=300.5) {
          it.printf(10, 40, id(font2), TextAlign::CENTER_LEFT, "VERY BAD!");
        }
        
        if (id(iaq_sensor).state >300.5) {
          it.printf(10, 40, id(font2), TextAlign::CENTER_LEFT, "Hazadous!");
        }
        
      
      }
      // Print inside temperature (from homeassistant sensor)
      if (id(temperature).has_state()) {
        it.printf(127, 15, id(font3), TextAlign::TOP_RIGHT , "%.1f°C", id(temperature).state);

      }
      // Print outside temperature (from homeassistant sensor)
      if (id(humidity).has_state()) {
        it.printf(127, 60, id(font3), TextAlign::BASELINE_RIGHT , "%.1f°H", id(humidity).state);
      }
      if (id(accuracy_desc).has_state()) {
        std::string val = id(accuracy_desc).state;
        it.printf(10, 60, id(font3), TextAlign::BASELINE_LEFT , "%s", val.c_str());
      }
      
      
      
      
font:
  - file: '/home/parallels/.local/bin/config/verdana.ttf'
    id: font1
    size: 8
  - file: '/home/parallels/.local/bin/config/verdana.ttf'
    id: font2
    size: 18
  - file: '/home/parallels/.local/bin/config/verdana.ttf'
    id: font3
    size: 12

# Enable Home Assistant API
api:


ota:
  password: "PASSWORD"


bme680_bsec:
   # address: 0x78 # required for purple CMJU snesor (normally 0x76)
    # Temperature offset if device is in enclosure and reads too high (default is 0)
    temperature_offset: 6.5
    # Mode for IAQ sensors if device is mobile (default is static)
    iaq_mode: static

    # Interval at which to save BSEC state (default is 6 hours)
    state_save_interval: 4h

sensor:
  - platform: bme680_bsec
    temperature:
      name: "RoomSensor1 Temperature"
      id: temperature
    pressure:
      name: "RoomSensor1 Pressure"
    humidity:
      name: "RoomSensor1 Humidity"
      id: humidity
    gas_resistance:
      name: "RoomSensor1 Gas Resistance"
    iaq:
      name: "RoomSensor1 IAQ"
      id: iaq_sensor
    co2_equivalent:
      name: "RoomSensor1 CO2 Equivalent"
      id: co2
    breath_voc_equivalent:
      name: "RoomSensor1 Breath VOC Equivalent"

text_sensor:
  - platform: bme680_bsec
    iaq_accuracy:
      name: "RoomSensor1 IAQ Accuracy"
      id: accuracy_desc
